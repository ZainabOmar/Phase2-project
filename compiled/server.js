'use strict';

var express = require('express');
var engines = require('engines');
var app = express();

app.set('port', process.env.PORT || 3000);
console.log(__dirname + '/app');
app.use(express.static(__dirname));
app.set('view engine', 'html');

app.get('/', function (req, res) {
  res.render('index');
});

app.set('view engine', 'jsx');

app.get('/times', function (request, response) {
  var result = '';
  var times = process.env.TIMES || 5;
  for (i = 0; i < times; i++) {
    result += i + ' ';
  }response.send(result);
});

app.listen(app.get('port'), function () {
  console.log('Node app is running on port', app.get('port'));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImVuZ2luZXMiLCJhcHAiLCJzZXQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImNvbnNvbGUiLCJsb2ciLCJfX2Rpcm5hbWUiLCJ1c2UiLCJzdGF0aWMiLCJnZXQiLCJyZXEiLCJyZXMiLCJyZW5kZXIiLCJyZXF1ZXN0IiwicmVzcG9uc2UiLCJyZXN1bHQiLCJ0aW1lcyIsIlRJTUVTIiwiaSIsInNlbmQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsVUFBVUMsUUFBUSxTQUFSLENBQWQ7QUFDQSxJQUFJQyxVQUFVRCxRQUFRLFNBQVIsQ0FBZDtBQUNBLElBQUlFLE1BQUlILFNBQVI7O0FBRUFHLElBQUlDLEdBQUosQ0FBUSxNQUFSLEVBQWlCQyxRQUFRQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBckM7QUFDQUMsUUFBUUMsR0FBUixDQUFZQyxZQUFVLE1BQXRCO0FBQ0FQLElBQUlRLEdBQUosQ0FBUVgsUUFBUVksTUFBUixDQUFlRixTQUFmLENBQVI7QUFDQVAsSUFBSUMsR0FBSixDQUFRLGFBQVIsRUFBdUIsTUFBdkI7O0FBRUFELElBQUlVLEdBQUosQ0FBUSxHQUFSLEVBQVksVUFBU0MsR0FBVCxFQUFhQyxHQUFiLEVBQWlCO0FBQzVCQSxNQUFJQyxNQUFKLENBQVcsT0FBWDtBQUNBLENBRkQ7O0FBSUFiLElBQUlDLEdBQUosQ0FBUSxhQUFSLEVBQXVCLEtBQXZCOztBQUVBRCxJQUFJVSxHQUFKLENBQVEsUUFBUixFQUFrQixVQUFTSSxPQUFULEVBQWtCQyxRQUFsQixFQUE0QjtBQUMxQyxNQUFJQyxTQUFTLEVBQWI7QUFDQSxNQUFJQyxRQUFRZixRQUFRQyxHQUFSLENBQVllLEtBQVosSUFBcUIsQ0FBakM7QUFDQSxPQUFLQyxJQUFFLENBQVAsRUFBVUEsSUFBSUYsS0FBZCxFQUFxQkUsR0FBckI7QUFDRUgsY0FBVUcsSUFBSSxHQUFkO0FBREYsR0FFRkosU0FBU0ssSUFBVCxDQUFjSixNQUFkO0FBQ0QsQ0FORDs7QUFRQWhCLElBQUlxQixNQUFKLENBQVdyQixJQUFJVSxHQUFKLENBQVEsTUFBUixDQUFYLEVBQTRCLFlBQVc7QUFDckNMLFVBQVFDLEdBQVIsQ0FBWSw2QkFBWixFQUEyQ04sSUFBSVUsR0FBSixDQUFRLE1BQVIsQ0FBM0M7QUFDRCxDQUZEIiwiZmlsZSI6InNlcnZlci5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG52YXIgZW5naW5lcyA9IHJlcXVpcmUoJ2VuZ2luZXMnKTtcclxudmFyIGFwcD1leHByZXNzKCk7XHJcblxyXG5hcHAuc2V0KCdwb3J0JywgKHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMCkpO1xyXG5jb25zb2xlLmxvZyhfX2Rpcm5hbWUrJy9hcHAnKVxyXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKF9fZGlybmFtZSkpXHJcbmFwcC5zZXQoJ3ZpZXcgZW5naW5lJywgJ2h0bWwnKTtcclxuXHJcbmFwcC5nZXQoJy8nLGZ1bmN0aW9uKHJlcSxyZXMpe1xyXG5cdHJlcy5yZW5kZXIoJ2luZGV4JylcclxufSlcclxuXHJcbmFwcC5zZXQoJ3ZpZXcgZW5naW5lJywgJ2pzeCcpO1xyXG5cclxuYXBwLmdldCgnL3RpbWVzJywgZnVuY3Rpb24ocmVxdWVzdCwgcmVzcG9uc2UpIHtcclxuICAgIHZhciByZXN1bHQgPSAnJ1xyXG4gICAgdmFyIHRpbWVzID0gcHJvY2Vzcy5lbnYuVElNRVMgfHwgNVxyXG4gICAgZm9yIChpPTA7IGkgPCB0aW1lczsgaSsrKVxyXG4gICAgICByZXN1bHQgKz0gaSArICcgJztcclxuICByZXNwb25zZS5zZW5kKHJlc3VsdCk7XHJcbn0pO1xyXG5cclxuYXBwLmxpc3RlbihhcHAuZ2V0KCdwb3J0JyksIGZ1bmN0aW9uKCkge1xyXG4gIGNvbnNvbGUubG9nKCdOb2RlIGFwcCBpcyBydW5uaW5nIG9uIHBvcnQnLCBhcHAuZ2V0KCdwb3J0JykpO1xyXG59KTtcclxuIl19